// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/companieshouse/payment-reconciler/app/dao (interfaces: DAO)
package dao

import (
	reflect "reflect"

	models "github.com/companieshouse/payment-reconciler/app/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDAO is a mock of DAO interface
type MockDAO struct {
	ctrl     *gomock.Controller
	recorder *MockDAOMockRecorder
}

// MockDAOMockRecorder is the mock recorder for MockDAO
type MockDAOMockRecorder struct {
	mock *MockDAO
}

// NewMockDAO creates a new mock instance
func NewMockDAO(ctrl *gomock.Controller) *MockDAO {
	mock := &MockDAO{ctrl: ctrl}
	mock.recorder = &MockDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDAO) EXPECT() *MockDAOMockRecorder {
	return m.recorder
}

// GetPaymentProductsData mocks base method
func (m *MockDAO) GetPaymentProductsData() (models.PaymentProductsData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentProductsData")
	ret0, _ := ret[0].(models.PaymentProductsData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentProductsData indicates an expected call of GetPaymentProductsData
func (mr *MockDAOMockRecorder) GetPaymentProductsData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentProductsData", reflect.TypeOf((*MockDAO)(nil).GetPaymentProductsData))
}

// GetPaymentTransactionsData mocks base method
func (m *MockDAO) GetPaymentTransactionsData() (models.PaymentTransactionsData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentTransactionsData")
	ret0, _ := ret[0].(models.PaymentTransactionsData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentTransactionsData indicates an expected call of GetPaymentTransactionsData
func (mr *MockDAOMockRecorder) GetPaymentTransactionsData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentTransactionsData", reflect.TypeOf((*MockDAO)(nil).GetPaymentTransactionsData))
}
