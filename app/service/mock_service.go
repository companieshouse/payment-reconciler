// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/companieshouse/payment-reconciler/app/service (interfaces: Service)
package service

import (
	reflect "reflect"

	models "github.com/companieshouse/payment-reconciler/app/models"
	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetPaymentProductsCSV mocks base method
func (m *MockService) GetPaymentProductsCSV(arg0 *models.ReconciliationMetaData) (models.CSV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentProductsCSV", arg0)
	ret0, _ := ret[0].(models.CSV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentProductsCSV indicates an expected call of GetPaymentProductsCSV
func (mr *MockServiceMockRecorder) GetPaymentProductsCSV(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentProductsCSV", reflect.TypeOf((*MockService)(nil).GetPaymentProductsCSV), arg0)
}

// GetPaymentTransactionsCSV mocks base method
func (m *MockService) GetPaymentTransactionsCSV(arg0 *models.ReconciliationMetaData) (models.CSV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPaymentTransactionsCSV", arg0)
	ret0, _ := ret[0].(models.CSV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPaymentTransactionsCSV indicates an expected call of GetPaymentTransactionsCSV
func (mr *MockServiceMockRecorder) GetPaymentTransactionsCSV(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPaymentTransactionsCSV", reflect.TypeOf((*MockService)(nil).GetPaymentTransactionsCSV), arg0)
}
