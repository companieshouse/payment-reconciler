// Code generated by MockGen. DO NOT EDIT.
// Source: service/service.go

// Package service is a generated GoMock package.
package service

import (
	models "github.com/companieshouse/payment-reconciler/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetTransactionsCSV mocks base method
func (m *MockService) GetTransactionsCSV(reconciliationMetaData *models.ReconciliationMetaData) (models.CSV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionsCSV", reconciliationMetaData)
	ret0, _ := ret[0].(models.CSV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionsCSV indicates an expected call of GetTransactionsCSV
func (mr *MockServiceMockRecorder) GetTransactionsCSV(reconciliationMetaData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionsCSV", reflect.TypeOf((*MockService)(nil).GetTransactionsCSV), reconciliationMetaData)
}

// GetProductsCSV mocks base method
func (m *MockService) GetProductsCSV(reconciliationMetaData *models.ReconciliationMetaData) (models.CSV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductsCSV", reconciliationMetaData)
	ret0, _ := ret[0].(models.CSV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductsCSV indicates an expected call of GetProductsCSV
func (mr *MockServiceMockRecorder) GetProductsCSV(reconciliationMetaData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductsCSV", reflect.TypeOf((*MockService)(nil).GetProductsCSV), reconciliationMetaData)
}

// GetRefundsCSV mocks base method
func (m *MockService) GetRefundsCSV(reconciliationMetaData *models.ReconciliationMetaData) (models.CSV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRefundsCSV", reconciliationMetaData)
	ret0, _ := ret[0].(models.CSV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRefundsCSV indicates an expected call of GetRefundsCSV
func (mr *MockServiceMockRecorder) GetRefundsCSV(reconciliationMetaData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRefundsCSV", reflect.TypeOf((*MockService)(nil).GetRefundsCSV), reconciliationMetaData)
}

// GetAutoRefundsCSV indicates an expected call of GetRefundsCSV
func (mr *MockServiceMockRecorder) GetAutoRefundsCSV(reconciliationMetaData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAutoRefundsCSV", reflect.TypeOf((*MockService)(nil).GetAutoRefundsCSV), reconciliationMetaData)
}

// GetAutoRefundsCSV mocks base method
func (m *MockService) GetAutoRefundsCSV(reconciliationMetaData *models.ReconciliationMetaData) (models.CSV, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAutoRefundsCSV", reconciliationMetaData)
	ret0, _ := ret[0].(models.CSV)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}
